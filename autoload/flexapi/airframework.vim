call flexapi#namespace('mx.controls.fileSystemClasses')
call flexapi#class('FileSystemComboBoxRenderer', 'ListItemRenderer', [], [
  \ flexapi#method(0, 'FileSystemComboBoxRenderer(', ')', ''),
  \ ])

call flexapi#namespace('mx.controls.fileSystemClasses')
call flexapi#class('FileSystemControlHelper', '', [], [
  \ flexapi#field(0, 'COMPUTER', 'File'),
  \ flexapi#method(0, 'FileSystemControlHelper(', 'owner:Object, hierarchical:Boolean)', ''),
  \ flexapi#get(0, 'backHistory', 'Array'),
  \ flexapi#get(0, 'canNavigateBack', 'Boolean'),
  \ flexapi#get(0, 'canNavigateDown', 'Boolean'),
  \ flexapi#get(0, 'canNavigateForward', 'Boolean'),
  \ flexapi#get(0, 'canNavigateUp', 'Boolean'),
  \ flexapi#get(0, 'directory', 'File'),
  \ flexapi#set(0, 'directory', 'File'),
  \ flexapi#get(0, 'enumerationMode', 'String'),
  \ flexapi#set(0, 'enumerationMode', 'String'),
  \ flexapi#get(0, 'filterFunction', 'Function'),
  \ flexapi#set(0, 'filterFunction', 'Function'),
  \ flexapi#get(0, 'forwardHistory', 'Array'),
  \ flexapi#field(0, 'history', 'Array'),
  \ flexapi#field(0, 'historyIndex', 'int'),
  \ flexapi#get(0, 'nameCompareFunction', 'Function'),
  \ flexapi#set(0, 'nameCompareFunction', 'Function'),
  \ flexapi#get(0, 'selectedPath', 'String'),
  \ flexapi#set(0, 'selectedPath', 'String'),
  \ flexapi#get(0, 'showExtensions', 'Boolean'),
  \ flexapi#set(0, 'showExtensions', 'Boolean'),
  \ flexapi#get(0, 'showHidden', 'Boolean'),
  \ flexapi#set(0, 'showHidden', 'Boolean'),
  \ flexapi#get(0, 'showIcons', 'Boolean'),
  \ flexapi#set(0, 'showIcons', 'Boolean'),
  \ flexapi#method(0, 'commitProperties(', ')', 'void'),
  \ flexapi#method(0, 'styleChanged(', 'styleProp:String)', 'void'),
  \ flexapi#method(0, 'itemToUID(', 'data:Object)', 'String'),
  \ flexapi#method(0, 'isComputer(', 'f:File)', 'Boolean'),
  \ flexapi#method(0, 'fileIconFunction(', 'item:File)', 'Class'),
  \ flexapi#method(0, 'fileLabelFunction(', 'item:File, column:DataGridColumn = null)', 'String'),
  \ flexapi#method(0, 'findIndex(', 'nativePath:String)', 'int'),
  \ flexapi#method(0, 'findItem(', 'nativePath:String)', 'File'),
  \ flexapi#method(0, 'navigateDown(', ')', 'void'),
  \ flexapi#method(0, 'navigateUp(', ')', 'void'),
  \ flexapi#method(0, 'navigateBack(', 'index:int = 0)', 'void'),
  \ flexapi#method(0, 'navigateForward(', 'index:int = 0)', 'void'),
  \ flexapi#method(0, 'navigateTo(', 'directory:File)', 'void'),
  \ flexapi#method(0, 'refresh(', ')', 'void'),
  \ flexapi#method(0, 'clear(', ')', 'void'),
  \ flexapi#method(0, 'resetHistory(', 'directory:File)', 'void'),
  \ flexapi#method(0, 'getParentChain(', 'file:File)', 'Array'),
  \ flexapi#method(0, 'itemDoubleClickHandler(', 'event:ListEvent)', 'void'),
  \ flexapi#method(0, 'handleKeyDown(', 'event:KeyboardEvent)', 'Boolean'),
  \ ])

call flexapi#namespace('mx.controls.fileSystemClasses')
call flexapi#class('FileSystemDataGridNameColumnRenderer', 'UIComponent', [], [
  \ flexapi#method(0, 'FileSystemDataGridNameColumnRenderer(', ')', ''),
  \ flexapi#get(0, 'baselinePosition', 'Number'),
  \ flexapi#get(0, 'data', 'Object'),
  \ flexapi#set(0, 'data', 'Object'),
  \ flexapi#get(0, 'listData', 'BaseListData'),
  \ flexapi#set(0, 'listData', 'BaseListData'),
  \ ])

call flexapi#namespace('mx.controls.fileSystemClasses')
call flexapi#class('FileSystemTreeDataDescriptor', 'DefaultDataDescriptor', [], [
  \ flexapi#method(0, 'FileSystemTreeDataDescriptor(', ')', ''),
  \ flexapi#method(0, 'getChildren(', 'node:Object, model:Object = null)', 'ICollectionView'),
  \ flexapi#method(0, 'isBranch(', 'node:Object, model:Object = null)', 'Boolean'),
  \ flexapi#method(0, 'hasChildren(', 'node:Object, model:Object = null)', 'Boolean'),
  \ flexapi#method(0, 'reset(', ')', 'void'),
  \ flexapi#method(0, 'setChildren(', 'node:Object, children:ArrayCollection)', 'void'),
  \ ])

call flexapi#namespace('mx.controls')
call flexapi#class('FileSystemComboBox', 'ComboBox', [], [
  \ flexapi#const(1, 'COMPUTER', 'File'),
  \ flexapi#method(0, 'FileSystemComboBox(', ')', ''),
  \ flexapi#get(0, 'directory', 'File'),
  \ flexapi#set(0, 'directory', 'File'),
  \ flexapi#get(0, 'indent', 'int'),
  \ flexapi#set(0, 'indent', 'int'),
  \ flexapi#get(0, 'showIcons', 'Boolean'),
  \ flexapi#set(0, 'showIcons', 'Boolean'),
  \ ])

call flexapi#namespace('mx.controls')
call flexapi#class('FileSystemDataGrid', 'DataGrid', [], [
  \ flexapi#const(1, 'COMPUTER', 'File'),
  \ flexapi#method(0, 'FileSystemDataGrid(', ')', ''),
  \ flexapi#get(0, 'backHistory', 'Array'),
  \ flexapi#get(0, 'canNavigateBack', 'Boolean'),
  \ flexapi#get(0, 'canNavigateDown', 'Boolean'),
  \ flexapi#get(0, 'canNavigateForward', 'Boolean'),
  \ flexapi#get(0, 'canNavigateUp', 'Boolean'),
  \ flexapi#field(0, 'creationDateColumn', 'DataGridColumn'),
  \ flexapi#get(0, 'dateFormatString', 'String'),
  \ flexapi#set(0, 'dateFormatString', 'String'),
  \ flexapi#get(0, 'directory', 'File'),
  \ flexapi#set(0, 'directory', 'File'),
  \ flexapi#get(0, 'enumerationMode', 'String'),
  \ flexapi#set(0, 'enumerationMode', 'String'),
  \ flexapi#get(0, 'filterFunction', 'Function'),
  \ flexapi#set(0, 'filterFunction', 'Function'),
  \ flexapi#get(0, 'forwardHistory', 'Array'),
  \ flexapi#field(0, 'modificationDateColumn', 'DataGridColumn'),
  \ flexapi#field(0, 'nameColumn', 'DataGridColumn'),
  \ flexapi#get(0, 'nameCompareFunction', 'Function'),
  \ flexapi#set(0, 'nameCompareFunction', 'Function'),
  \ flexapi#get(0, 'selectedPath', 'String'),
  \ flexapi#set(0, 'selectedPath', 'String'),
  \ flexapi#get(0, 'showExtensions', 'Boolean'),
  \ flexapi#set(0, 'showExtensions', 'Boolean'),
  \ flexapi#get(0, 'showHidden', 'Boolean'),
  \ flexapi#set(0, 'showHidden', 'Boolean'),
  \ flexapi#get(0, 'showIcons', 'Boolean'),
  \ flexapi#set(0, 'showIcons', 'Boolean'),
  \ flexapi#field(0, 'sizeColumn', 'DataGridColumn'),
  \ flexapi#get(0, 'sizeDisplayMode', 'String'),
  \ flexapi#set(0, 'sizeDisplayMode', 'String'),
  \ flexapi#field(0, 'typeColumn', 'DataGridColumn'),
  \ flexapi#method(0, 'styleChanged(', 'styleProp:String)', 'void'),
  \ flexapi#method(0, 'findIndex(', 'nativePath:String)', 'int'),
  \ flexapi#method(0, 'findItem(', 'nativePath:String)', 'File'),
  \ flexapi#method(0, 'navigateDown(', ')', 'void'),
  \ flexapi#method(0, 'navigateUp(', ')', 'void'),
  \ flexapi#method(0, 'navigateBack(', 'index:int = 0)', 'void'),
  \ flexapi#method(0, 'navigateForward(', 'index:int = 0)', 'void'),
  \ flexapi#method(0, 'navigateTo(', 'directory:File)', 'void'),
  \ flexapi#method(0, 'refresh(', ')', 'void'),
  \ flexapi#method(0, 'clear(', ')', 'void'),
  \ flexapi#method(0, 'resetHistory(', 'dir:File)', 'void'),
  \ flexapi#method(0, 'CustomDataGridColumn(', 'columnName:String = null)', ''),
  \ flexapi#method(0, 'itemToDataTip(', 'data:Object)', 'String'),
  \ ])

call flexapi#namespace('mx.controls')
call flexapi#class('FileSystemEnumerationMode', '', [], [
  \ flexapi#const(1, 'FILES_ONLY', 'String'),
  \ flexapi#const(1, 'DIRECTORIES_ONLY', 'String'),
  \ flexapi#const(1, 'FILES_FIRST', 'String'),
  \ flexapi#const(1, 'DIRECTORIES_FIRST', 'String'),
  \ flexapi#const(1, 'FILES_AND_DIRECTORIES', 'String'),
  \ ])
call flexapi#namespace('mx.controls')
call flexapi#class('FileSystemHistoryButton', 'PopUpButton', [], [
  \ flexapi#method(0, 'FileSystemHistoryButton(', ')', ''),
  \ flexapi#get(0, 'dataProvider', 'Object'),
  \ flexapi#set(0, 'dataProvider', 'Object'),
  \ ])

call flexapi#namespace('mx.controls')
call flexapi#class('FileSystemList', 'List', [], [
  \ flexapi#const(1, 'COMPUTER', 'File'),
  \ flexapi#method(0, 'FileSystemList(', ')', ''),
  \ flexapi#get(0, 'backHistory', 'Array'),
  \ flexapi#get(0, 'canNavigateBack', 'Boolean'),
  \ flexapi#get(0, 'canNavigateDown', 'Boolean'),
  \ flexapi#get(0, 'canNavigateForward', 'Boolean'),
  \ flexapi#get(0, 'canNavigateUp', 'Boolean'),
  \ flexapi#get(0, 'directory', 'File'),
  \ flexapi#set(0, 'directory', 'File'),
  \ flexapi#get(0, 'enumerationMode', 'String'),
  \ flexapi#set(0, 'enumerationMode', 'String'),
  \ flexapi#get(0, 'filterFunction', 'Function'),
  \ flexapi#set(0, 'filterFunction', 'Function'),
  \ flexapi#get(0, 'forwardHistory', 'Array'),
  \ flexapi#get(0, 'nameCompareFunction', 'Function'),
  \ flexapi#set(0, 'nameCompareFunction', 'Function'),
  \ flexapi#get(0, 'selectedPath', 'String'),
  \ flexapi#set(0, 'selectedPath', 'String'),
  \ flexapi#get(0, 'showExtensions', 'Boolean'),
  \ flexapi#set(0, 'showExtensions', 'Boolean'),
  \ flexapi#get(0, 'showHidden', 'Boolean'),
  \ flexapi#set(0, 'showHidden', 'Boolean'),
  \ flexapi#get(0, 'showIcons', 'Boolean'),
  \ flexapi#set(0, 'showIcons', 'Boolean'),
  \ flexapi#method(0, 'styleChanged(', 'styleProp:String)', 'void'),
  \ flexapi#method(0, 'itemToDataTip(', 'data:Object)', 'String'),
  \ flexapi#method(0, 'findIndex(', 'nativePath:String)', 'int'),
  \ flexapi#method(0, 'findItem(', 'nativePath:String)', 'File'),
  \ flexapi#method(0, 'navigateDown(', ')', 'void'),
  \ flexapi#method(0, 'navigateUp(', ')', 'void'),
  \ flexapi#method(0, 'navigateBack(', 'index:int = 0)', 'void'),
  \ flexapi#method(0, 'navigateForward(', 'index:int = 0)', 'void'),
  \ flexapi#method(0, 'navigateTo(', 'directory:File)', 'void'),
  \ flexapi#method(0, 'refresh(', ')', 'void'),
  \ flexapi#method(0, 'clear(', ')', 'void'),
  \ flexapi#method(0, 'resetHistory(', 'dir:File)', 'void'),
  \ ])

call flexapi#namespace('mx.controls')
call flexapi#class('FileSystemSizeDisplayMode', '', [], [
  \ flexapi#const(1, 'BYTES', 'String'),
  \ flexapi#const(1, 'KILOBYTES', 'String'),
  \ ])
call flexapi#namespace('mx.controls')
call flexapi#class('FileSystemTree', 'Tree', [], [
  \ flexapi#const(1, 'COMPUTER', 'File'),
  \ flexapi#method(0, 'FileSystemTree(', ')', ''),
  \ flexapi#get(0, 'directory', 'File'),
  \ flexapi#set(0, 'directory', 'File'),
  \ flexapi#get(0, 'enumerationMode', 'String'),
  \ flexapi#set(0, 'enumerationMode', 'String'),
  \ flexapi#get(0, 'filterFunction', 'Function'),
  \ flexapi#set(0, 'filterFunction', 'Function'),
  \ flexapi#get(0, 'nameCompareFunction', 'Function'),
  \ flexapi#set(0, 'nameCompareFunction', 'Function'),
  \ flexapi#get(0, 'selectedPath', 'String'),
  \ flexapi#set(0, 'selectedPath', 'String'),
  \ flexapi#get(0, 'showExtensions', 'Boolean'),
  \ flexapi#set(0, 'showExtensions', 'Boolean'),
  \ flexapi#get(0, 'showHidden', 'Boolean'),
  \ flexapi#set(0, 'showHidden', 'Boolean'),
  \ flexapi#get(0, 'showIcons', 'Boolean'),
  \ flexapi#set(0, 'showIcons', 'Boolean'),
  \ flexapi#method(0, 'getStyle(', 'styleProp:String)', '*'),
  \ flexapi#method(0, 'styleChanged(', 'styleProp:String)', 'void'),
  \ flexapi#method(0, 'findIndex(', 'nativePath:String)', 'int'),
  \ flexapi#method(0, 'findItem(', 'nativePath:String)', 'File'),
  \ flexapi#method(0, 'refresh(', ')', 'void'),
  \ flexapi#method(0, 'clear(', ')', 'void'),
  \ flexapi#method(0, 'openSubdirectory(', 'nativePath:String)', 'void'),
  \ flexapi#method(0, 'closeSubdirectory(', 'nativePath:String)', 'void'),
  \ ])

call flexapi#namespace('mx.controls')
call flexapi#class('FlexNativeMenu', 'EventDispatcher', [], [
  \ flexapi#method(0, 'FlexNativeMenu(', ')', ''),
  \ flexapi#get(0, 'automationDelegate', 'Object'),
  \ flexapi#set(0, 'automationDelegate', 'Object'),
  \ flexapi#get(0, 'automationName', 'String'),
  \ flexapi#set(0, 'automationName', 'String'),
  \ flexapi#get(0, 'automationValue', 'Array'),
  \ flexapi#get(0, 'numAutomationChildren', 'int'),
  \ flexapi#get(0, 'automationTabularData', 'Object'),
  \ flexapi#get(0, 'automationOwner', 'DisplayObjectContainer'),
  \ flexapi#set(0, 'automationOwner', 'DisplayObjectContainer'),
  \ flexapi#get(0, 'automationParent', 'DisplayObjectContainer'),
  \ flexapi#set(0, 'automationParent', 'DisplayObjectContainer'),
  \ flexapi#get(0, 'automationEnabled', 'Boolean'),
  \ flexapi#get(0, 'automationVisible', 'Boolean'),
  \ flexapi#get(0, 'showInAutomationHierarchy', 'Boolean'),
  \ flexapi#set(0, 'showInAutomationHierarchy', 'Boolean'),
  \ flexapi#get(0, 'initialized', 'Boolean'),
  \ flexapi#set(0, 'initialized', 'Boolean'),
  \ flexapi#get(0, 'nestLevel', 'int'),
  \ flexapi#set(0, 'nestLevel', 'int'),
  \ flexapi#get(0, 'processedDescriptors', 'Boolean'),
  \ flexapi#set(0, 'processedDescriptors', 'Boolean'),
  \ flexapi#get(0, 'updateCompletePendingFlag', 'Boolean'),
  \ flexapi#set(0, 'updateCompletePendingFlag', 'Boolean'),
  \ flexapi#get(0, 'nativeMenu', ': NativeMenu'),
  \ flexapi#get(0, 'dataDescriptor', 'IMenuDataDescriptor'),
  \ flexapi#set(0, 'dataDescriptor', 'IMenuDataDescriptor'),
  \ flexapi#get(0, 'dataProvider', 'Object'),
  \ flexapi#set(0, 'dataProvider', 'Object'),
  \ flexapi#get(0, 'hasRoot', 'Boolean'),
  \ flexapi#get(0, 'keyEquivalentField', 'String'),
  \ flexapi#set(0, 'keyEquivalentField', 'String'),
  \ flexapi#get(0, 'keyEquivalentFunction', 'Function'),
  \ flexapi#set(0, 'keyEquivalentFunction', 'Function'),
  \ flexapi#get(0, 'keyEquivalentModifiersFunction', 'Function'),
  \ flexapi#set(0, 'keyEquivalentModifiersFunction', 'Function'),
  \ flexapi#get(0, 'labelField', 'String'),
  \ flexapi#set(0, 'labelField', 'String'),
  \ flexapi#get(0, 'labelFunction', 'Function'),
  \ flexapi#set(0, 'labelFunction', 'Function'),
  \ flexapi#get(0, 'mnemonicIndexField', 'String'),
  \ flexapi#set(0, 'mnemonicIndexField', 'String'),
  \ flexapi#get(0, 'mnemonicIndexFunction', 'Function'),
  \ flexapi#set(0, 'mnemonicIndexFunction', 'Function'),
  \ flexapi#get(0, 'showRoot', 'Boolean'),
  \ flexapi#set(0, 'showRoot', 'Boolean'),
  \ flexapi#method(0, 'invalidateProperties(', ')', 'void'),
  \ flexapi#method(0, 'validatePropertiesTimerHandler(', 'event:TimerEvent)', 'void'),
  \ flexapi#method(0, 'validateProperties(', ')', 'void'),
  \ flexapi#method(0, 'validateSize(', 'recursive:Boolean = false)', 'void'),
  \ flexapi#method(0, 'validateDisplayList(', ')', 'void'),
  \ flexapi#method(0, 'validateNow(', ')', 'void'),
  \ flexapi#method(0, 'setContextMenu(', 'component:InteractiveObject)', 'void'),
  \ flexapi#method(0, 'unsetContextMenu(', 'component:InteractiveObject)', 'void'),
  \ flexapi#method(0, 'display(', 'stage:Stage, x:int, y:int)', 'void'),
  \ flexapi#method(0, 'createAutomationIDPart(', 'child:IAutomationObject)', 'Object'),
  \ flexapi#method(0, 'createAutomationIDPartWithRequiredProperties(', 'child:IAutomationObject, properties:Array)', 'Object'),
  \ flexapi#method(0, 'resolveAutomationIDPart(', 'criteria:Object)', 'Array'),
  \ flexapi#method(0, 'getAutomationChildAt(', 'index:int)', 'IAutomationObject'),
  \ flexapi#method(0, 'getAutomationChildren(', ')', 'Array'),
  \ flexapi#method(0, 'replayAutomatableEvent(', 'event:Event)', 'Boolean'),
  \ ])

call flexapi#namespace('mx.controls')
call flexapi#class('HTML', 'ScrollControlBase', [], [
  \ flexapi#get(1, 'pdfCapability', 'int'),
  \ flexapi#method(0, 'HTML(', ')', ''),
  \ flexapi#set(0, 'verticalScrollPosition', 'Number'),
  \ flexapi#get(0, 'contentHeight', 'Number'),
  \ flexapi#get(0, 'contentWidth', 'Number'),
  \ flexapi#get(0, 'data', 'Object'),
  \ flexapi#set(0, 'data', 'Object'),
  \ flexapi#get(0, 'historyLength', 'int'),
  \ flexapi#get(0, 'historyPosition', 'int'),
  \ flexapi#set(0, 'historyPosition', 'int'),
  \ flexapi#field(0, 'htmlLoader', 'HTMLLoader'),
  \ flexapi#get(0, 'htmlLoaderFactory', 'IFactory'),
  \ flexapi#set(0, 'htmlLoaderFactory', 'IFactory'),
  \ flexapi#get(0, 'htmlHost', 'HTMLHost'),
  \ flexapi#set(0, 'htmlHost', 'HTMLHost'),
  \ flexapi#get(0, 'htmlText', 'String'),
  \ flexapi#set(0, 'htmlText', 'String'),
  \ flexapi#get(0, 'domWindow', 'Object'),
  \ flexapi#get(0, 'imeMode', 'String'),
  \ flexapi#set(0, 'imeMode', 'String'),
  \ flexapi#get(0, 'listData', 'BaseListData'),
  \ flexapi#set(0, 'listData', 'BaseListData'),
  \ flexapi#get(0, 'loaded', 'Boolean'),
  \ flexapi#get(0, 'location', 'String'),
  \ flexapi#set(0, 'location', 'String'),
  \ flexapi#get(0, 'paintsDefaultBackground', 'Boolean'),
  \ flexapi#set(0, 'paintsDefaultBackground', 'Boolean'),
  \ flexapi#get(0, 'runtimeApplicationDomain', 'ApplicationDomain'),
  \ flexapi#set(0, 'runtimeApplicationDomain', 'ApplicationDomain'),
  \ flexapi#get(0, 'userAgent', 'String'),
  \ flexapi#set(0, 'userAgent', 'String'),
  \ flexapi#method(0, 'cancelLoad(', ')', 'void'),
  \ flexapi#method(0, 'getHistoryAt(', 'position:int)', 'HTMLHistoryItem'),
  \ flexapi#method(0, 'historyBack(', ')', 'void'),
  \ flexapi#method(0, 'historyForward(', ')', 'void'),
  \ flexapi#method(0, 'historyGo(', 'steps:int)', 'void'),
  \ flexapi#method(0, 'reload(', ')', 'void'),
  \ ])

call flexapi#namespace('mx.core')
call flexapi#class('FlexHTMLLoader', 'HTMLLoader', ['IFocusManagerComplexComponent, IIMESupport'], [
  \ flexapi#method(0, 'FlexHTMLLoader(', ')', ''),
  \ flexapi#get(0, 'enableIME', 'Boolean'),
  \ flexapi#get(0, 'focusEnabled', 'Boolean'),
  \ flexapi#set(0, 'focusEnabled', 'Boolean'),
  \ flexapi#get(0, 'hasFocusableChildren', 'Boolean'),
  \ flexapi#set(0, 'hasFocusableChildren', 'Boolean'),
  \ flexapi#get(0, 'imeMode', 'String'),
  \ flexapi#set(0, 'imeMode', 'String'),
  \ flexapi#get(0, 'mouseFocusEnabled', 'Boolean'),
  \ flexapi#set(0, 'mouseFocusEnabled', 'Boolean'),
  \ flexapi#get(0, 'tabFocusEnabled', 'Boolean'),
  \ flexapi#set(0, 'tabFocusEnabled', 'Boolean'),
  \ flexapi#method(0, 'setFocus(', ')', 'void'),
  \ flexapi#method(0, 'drawFocus(', 'isFocused:Boolean)', 'void'),
  \ flexapi#method(0, 'assignFocus(', 'direction:String)', 'void'),
  \ flexapi#method(0, 'toString(', ')', 'String'),
  \ ])

call flexapi#namespace('mx.core')
call flexapi#interface('IWindow', '', [], [
  \ flexapi#get(0, 'maximizable', 'Boolean'),
  \ flexapi#get(0, 'minimizable', 'Boolean'),
  \ flexapi#get(0, 'nativeWindow', 'NativeWindow'),
  \ flexapi#get(0, 'resizable', 'Boolean'),
  \ flexapi#get(0, 'status', 'String'),
  \ flexapi#set(0, 'status', 'String'),
  \ flexapi#get(0, 'systemChrome', 'String'),
  \ flexapi#get(0, 'title', 'String'),
  \ flexapi#set(0, 'title', 'String'),
  \ flexapi#get(0, 'titleIcon', 'Class'),
  \ flexapi#set(0, 'titleIcon', 'Class'),
  \ flexapi#get(0, 'transparent', 'Boolean'),
  \ flexapi#get(0, 'type', 'String'),
  \ flexapi#get(0, 'visible', 'Boolean'),
  \ flexapi#method(0, 'close(', ')', 'void;'),
  \ flexapi#method(0, 'maximize(', ')', 'void'),
  \ flexapi#method(0, 'minimize(', ')', 'void;'),
  \ flexapi#method(0, 'restore(', ')', 'void;'),
  \ ])

call flexapi#namespace('mx.core')
call flexapi#class('Window', 'LayoutContainer', ['IWindow'], [
  \ flexapi#method(1, 'getWindow(', 'component:UIComponent)', 'IWindow'),
  \ flexapi#method(0, 'Window(', ')', ''),
  \ flexapi#get(0, 'height', 'Number'),
  \ flexapi#set(0, 'height', 'Number'),
  \ flexapi#get(0, 'maxHeight', 'Number'),
  \ flexapi#set(0, 'maxHeight', 'Number'),
  \ flexapi#get(0, 'maxWidth', 'Number'),
  \ flexapi#set(0, 'maxWidth', 'Number'),
  \ flexapi#get(0, 'minHeight', 'Number'),
  \ flexapi#set(0, 'minHeight', 'Number'),
  \ flexapi#get(0, 'minWidth', 'Number'),
  \ flexapi#set(0, 'minWidth', 'Number'),
  \ flexapi#get(0, 'visible', 'Boolean'),
  \ flexapi#set(0, 'visible', 'Boolean'),
  \ flexapi#method(0, 'setVisible(', 'value:Boolean, noEvent:Boolean = false)', 'void'),
  \ flexapi#get(0, 'width', 'Number'),
  \ flexapi#set(0, 'width', 'Number'),
  \ flexapi#get(0, 'viewMetrics', 'EdgeMetrics'),
  \ flexapi#get(0, 'alwaysInFront', 'Boolean'),
  \ flexapi#set(0, 'alwaysInFront', 'Boolean'),
  \ flexapi#get(0, 'closed', 'Boolean'),
  \ flexapi#field(0, 'controlBar', 'IUIComponent'),
  \ flexapi#get(0, 'maximizable', 'Boolean'),
  \ flexapi#set(0, 'maximizable', 'Boolean'),
  \ flexapi#get(0, 'cursorManager', 'ICursorManager'),
  \ flexapi#get(0, 'menu', 'FlexNativeMenu'),
  \ flexapi#set(0, 'menu', 'FlexNativeMenu'),
  \ flexapi#get(0, 'minimizable', 'Boolean'),
  \ flexapi#set(0, 'minimizable', 'Boolean'),
  \ flexapi#get(0, 'nativeWindow', 'NativeWindow'),
  \ flexapi#get(0, 'resizable', 'Boolean'),
  \ flexapi#set(0, 'resizable', 'Boolean'),
  \ flexapi#get(0, 'showGripper', 'Boolean'),
  \ flexapi#set(0, 'showGripper', 'Boolean'),
  \ flexapi#get(0, 'showStatusBar', 'Boolean'),
  \ flexapi#set(0, 'showStatusBar', 'Boolean'),
  \ flexapi#get(0, 'showTitleBar', 'Boolean'),
  \ flexapi#set(0, 'showTitleBar', 'Boolean'),
  \ flexapi#get(0, 'status', 'String'),
  \ flexapi#set(0, 'status', 'String'),
  \ flexapi#get(0, 'statusBar', 'UIComponent'),
  \ flexapi#get(0, 'statusBarFactory', 'IFactory'),
  \ flexapi#set(0, 'statusBarFactory', 'IFactory'),
  \ flexapi#get(0, 'systemChrome', 'String'),
  \ flexapi#set(0, 'systemChrome', 'String'),
  \ flexapi#get(0, 'title', 'String'),
  \ flexapi#set(0, 'title', 'String'),
  \ flexapi#get(0, 'titleBar', 'UIComponent'),
  \ flexapi#get(0, 'titleBarFactory', 'IFactory'),
  \ flexapi#set(0, 'titleBarFactory', 'IFactory'),
  \ flexapi#get(0, 'titleIcon', 'Class'),
  \ flexapi#set(0, 'titleIcon', 'Class'),
  \ flexapi#get(0, 'transparent', 'Boolean'),
  \ flexapi#set(0, 'transparent', 'Boolean'),
  \ flexapi#get(0, 'type', 'String'),
  \ flexapi#set(0, 'type', 'String'),
  \ flexapi#method(0, 'initialize(', ')', 'void'),
  \ flexapi#method(0, 'validateDisplayList(', ')', 'void'),
  \ flexapi#method(0, 'styleChanged(', 'styleProp:String)', 'void'),
  \ flexapi#method(0, 'move(', 'x:Number, y:Number)', 'void'),
  \ flexapi#method(0, 'close(', ')', 'void'),
  \ flexapi#method(0, 'getStatusBarHeight(', ')', 'Number'),
  \ flexapi#method(0, 'maximize(', ')', 'void'),
  \ flexapi#method(0, 'minimize(', ')', 'void'),
  \ flexapi#method(0, 'restore(', ')', 'void'),
  \ flexapi#method(0, 'activate(', ')', 'void'),
  \ flexapi#method(0, 'open(', 'openWindowActive:Boolean = true)', 'void'),
  \ flexapi#method(0, 'orderInBackOf(', 'window:IWindow)', 'Boolean'),
  \ flexapi#method(0, 'orderInFrontOf(', 'window:IWindow)', 'Boolean'),
  \ flexapi#method(0, 'orderToBack(', ')', 'Boolean'),
  \ flexapi#method(0, 'orderToFront(', ')', 'Boolean'),
  \ ])

call flexapi#namespace('mx.core.windowClasses')
call flexapi#class('StatusBar', 'UIComponent', [], [
  \ flexapi#method(0, 'StatusBar(', ')', 'void'),
  \ flexapi#get(0, 'status', 'String'),
  \ flexapi#set(0, 'status', 'String'),
  \ flexapi#field(0, 'statusTextField', 'IUITextField'),
  \ flexapi#method(0, 'styleChanged(', 'styleProp:String)', 'void'),
  \ ])

call flexapi#namespace('mx.core.windowClasses')
call flexapi#class('TitleBar', 'UIComponent', [], [
  \ flexapi#method(0, 'TitleBar(', ')', 'void'),
  \ flexapi#field(0, 'closeButton', 'Button'),
  \ flexapi#field(0, 'maximizeButton', 'Button'),
  \ flexapi#field(0, 'minimizeButton', 'Button'),
  \ flexapi#get(0, 'title', 'String'),
  \ flexapi#set(0, 'title', 'String'),
  \ flexapi#get(0, 'titleIcon', 'Class'),
  \ flexapi#set(0, 'titleIcon', 'Class'),
  \ flexapi#field(0, 'titleTextField', 'IUITextField'),
  \ flexapi#method(0, 'styleChanged(', 'styleProp:String)', 'void'),
  \ ])

call flexapi#namespace('mx.core')
call flexapi#class('WindowedApplication', 'Application', ['IWindow'], [
  \ flexapi#method(0, 'WindowedApplication(', ')', ''),
  \ flexapi#get(0, 'height', 'Number'),
  \ flexapi#set(0, 'height', 'Number'),
  \ flexapi#get(0, 'maxHeight', 'Number'),
  \ flexapi#set(0, 'maxHeight', 'Number'),
  \ flexapi#get(0, 'maxWidth', 'Number'),
  \ flexapi#set(0, 'maxWidth', 'Number'),
  \ flexapi#get(0, 'minHeight', 'Number'),
  \ flexapi#set(0, 'minHeight', 'Number'),
  \ flexapi#get(0, 'minWidth', 'Number'),
  \ flexapi#set(0, 'minWidth', 'Number'),
  \ flexapi#get(0, 'visible', 'Boolean'),
  \ flexapi#set(0, 'visible', 'Boolean'),
  \ flexapi#method(0, 'setVisible(', 'value:Boolean, noEvent:Boolean = false)', 'void'),
  \ flexapi#get(0, 'width', 'Number'),
  \ flexapi#set(0, 'width', 'Number'),
  \ flexapi#get(0, 'viewMetrics', 'EdgeMetrics'),
  \ flexapi#get(0, 'applicationID', 'String'),
  \ flexapi#get(0, 'alwaysInFront', 'Boolean'),
  \ flexapi#set(0, 'alwaysInFront', 'Boolean'),
  \ flexapi#get(0, 'autoExit', 'Boolean'),
  \ flexapi#set(0, 'autoExit', 'Boolean'),
  \ flexapi#get(0, 'backgroundFrameRate', 'Number'),
  \ flexapi#set(0, 'backgroundFrameRate', 'Number'),
  \ flexapi#get(0, 'closed', 'Boolean'),
  \ flexapi#get(0, 'dockIconMenu', 'FlexNativeMenu'),
  \ flexapi#set(0, 'dockIconMenu', 'FlexNativeMenu'),
  \ flexapi#get(0, 'maximizable', 'Boolean'),
  \ flexapi#get(0, 'minimizable', 'Boolean'),
  \ flexapi#get(0, 'menu', 'FlexNativeMenu'),
  \ flexapi#set(0, 'menu', 'FlexNativeMenu'),
  \ flexapi#get(0, 'nativeWindow', 'NativeWindow'),
  \ flexapi#get(0, 'resizable', 'Boolean'),
  \ flexapi#get(0, 'nativeApplication', 'NativeApplication'),
  \ flexapi#get(0, 'showGripper', 'Boolean'),
  \ flexapi#set(0, 'showGripper', 'Boolean'),
  \ flexapi#get(0, 'showStatusBar', 'Boolean'),
  \ flexapi#set(0, 'showStatusBar', 'Boolean'),
  \ flexapi#get(0, 'showTitleBar', 'Boolean'),
  \ flexapi#set(0, 'showTitleBar', 'Boolean'),
  \ flexapi#get(0, 'status', 'String'),
  \ flexapi#set(0, 'status', 'String'),
  \ flexapi#get(0, 'statusBar', 'UIComponent'),
  \ flexapi#get(0, 'statusBarFactory', 'IFactory'),
  \ flexapi#set(0, 'statusBarFactory', 'IFactory'),
  \ flexapi#get(0, 'systemChrome', 'String'),
  \ flexapi#get(0, 'systemTrayIconMenu', 'FlexNativeMenu'),
  \ flexapi#set(0, 'systemTrayIconMenu', 'FlexNativeMenu'),
  \ flexapi#get(0, 'title', 'String'),
  \ flexapi#set(0, 'title', 'String'),
  \ flexapi#get(0, 'titleBar', 'UIComponent'),
  \ flexapi#get(0, 'titleBarFactory', 'IFactory'),
  \ flexapi#set(0, 'titleBarFactory', 'IFactory'),
  \ flexapi#get(0, 'titleIcon', 'Class'),
  \ flexapi#set(0, 'titleIcon', 'Class'),
  \ flexapi#get(0, 'transparent', 'Boolean'),
  \ flexapi#get(0, 'type', 'String'),
  \ flexapi#field(0, 'useNativeDragManager', 'Boolean'),
  \ flexapi#method(0, 'initialize(', ')', 'void'),
  \ flexapi#method(0, 'validateDisplayList(', ')', 'void'),
  \ flexapi#method(0, 'styleChanged(', 'styleProp:String)', 'void'),
  \ flexapi#method(0, 'move(', 'x:Number, y:Number)', 'void'),
  \ flexapi#method(0, 'activate(', ')', 'void'),
  \ flexapi#method(0, 'close(', ')', 'void'),
  \ flexapi#method(0, 'exit(', ')', 'void'),
  \ flexapi#method(0, 'getStatusBarHeight(', ')', 'Number'),
  \ flexapi#method(0, 'maximize(', ')', 'void'),
  \ flexapi#method(0, 'minimize(', ')', 'void'),
  \ flexapi#method(0, 'restore(', ')', 'void'),
  \ flexapi#method(0, 'orderInBackOf(', 'window:IWindow)', 'Boolean'),
  \ flexapi#method(0, 'orderInFrontOf(', 'window:IWindow)', 'Boolean'),
  \ flexapi#method(0, 'orderToBack(', ')', 'Boolean'),
  \ flexapi#method(0, 'orderToFront(', ')', 'Boolean'),
  \ flexapi#method(0, '(', 'e:FlexNativeWindowBoundsEvent)', 'void'),
  \ flexapi#method(0, '(', ')', 'void { win.close(); };'),
  \ ])

call flexapi#namespace('mx.events')
call flexapi#class('AIREvent', 'Event', [], [
  \ flexapi#const(1, 'APPLICATION_ACTIVATE', 'String'),
  \ flexapi#const(1, 'APPLICATION_DEACTIVATE', 'String'),
  \ flexapi#const(1, 'WINDOW_ACTIVATE', 'String'),
  \ flexapi#const(1, 'WINDOW_DEACTIVATE', 'String'),
  \ flexapi#const(1, 'WINDOW_COMPLETE', 'String'),
  \ flexapi#method(0, 'AIREvent(', 'type:String, bubbles:Boolean = false, cancelable:Boolean = false)', ''),
  \ flexapi#method(0, 'clone(', ')', 'Event'),
  \ ])

call flexapi#namespace('mx.events')
call flexapi#class('FileEvent', 'Event', [], [
  \ flexapi#const(1, 'DIRECTORY_CHANGE', 'String'),
  \ flexapi#const(1, 'DIRECTORY_CHANGING', 'String'),
  \ flexapi#const(1, 'DIRECTORY_OPENING', 'String'),
  \ flexapi#const(1, 'DIRECTORY_CLOSING', 'String'),
  \ flexapi#const(1, 'FILE_CHOOSE', 'String'),
  \ flexapi#method(0, 'FileEvent(', 'type:String, bubbles:Boolean = false, cancelable:Boolean = false, file:File = null)', ''),
  \ flexapi#field(0, 'file', 'File'),
  \ flexapi#method(0, 'clone(', ')', 'Event'),
  \ ])

call flexapi#namespace('mx.events')
call flexapi#class('FlexNativeMenuEvent', 'Event', [], [
  \ flexapi#const(1, 'ITEM_CLICK', 'String'),
  \ flexapi#const(1, 'MENU_SHOW', 'String'),
  \ flexapi#method(0, 'FlexNativeMenuEvent(', 'type:String, bubbles:Boolean = false, cancelable:Boolean = true, nativeMenu:NativeMenu = null, nativeMenuItem:NativeMenuItem = null, item:Object = null, label:String = null, index:int = -1)', ''),
  \ flexapi#field(0, 'index', 'int'),
  \ flexapi#field(0, 'item', 'Object'),
  \ flexapi#field(0, 'label', 'String'),
  \ flexapi#field(0, 'nativeMenu', 'NativeMenu'),
  \ flexapi#field(0, 'nativeMenuItem', 'NativeMenuItem'),
  \ flexapi#method(0, 'clone(', ')', 'Event'),
  \ ])

call flexapi#namespace('mx.events')
call flexapi#class('FlexNativeWindowBoundsEvent', 'NativeWindowBoundsEvent', [], [
  \ flexapi#const(1, 'WINDOW_RESIZE', 'String'),
  \ flexapi#const(1, 'WINDOW_MOVE', 'String'),
  \ flexapi#method(0, 'FlexNativeWindowBoundsEvent(', 'type:String, bubbles:Boolean = false, cancelable:Boolean = false, beforeBounds:Rectangle = null, afterBounds:Rectangle = null)', ''),
  \ flexapi#method(0, 'clone(', ')', 'Event'),
  \ ])

call flexapi#namespace('mx.events')
call flexapi#class('WindowExistenceEvent', 'Event', [], [
  \ flexapi#const(1, 'WINDOW_CREATE', 'String'),
  \ flexapi#const(1, 'WINDOW_CREATING', 'String'),
  \ flexapi#const(1, 'WINDOW_CLOSE', 'String'),
  \ flexapi#method(0, 'WindowExistenceEvent(', 'type:String, bubbles:Boolean = false, cancelable:Boolean = false, window:IWindow = null)', ''),
  \ flexapi#field(0, 'window', 'IWindow'),
  \ flexapi#method(0, 'clone(', ')', 'Event'),
  \ ])

call flexapi#namespace('mx.managers')
call flexapi#class('NativeDragManagerImpl', '', ['IDragManager'], [
  \ flexapi#method(1, 'getInstance(', ')', 'IDragManager'),
  \ flexapi#method(0, 'NativeDragManagerImpl(', ')', ''),
  \ flexapi#field(0, 'dragProxy', 'DragProxy'),
  \ flexapi#get(0, 'isDragging', 'Boolean'),
  \ flexapi#method(0, 'acceptDragDrop(', 'target:IUIComponent)', 'void'),
  \ flexapi#method(0, 'showFeedback(', 'feedback:String)', 'void'),
  \ flexapi#method(0, 'getFeedback(', ')', 'String'),
  \ flexapi#method(0, 'endDrag(', ')', 'void'),
  \ flexapi#method(0, 'DragDataFormatFetcher(', ')', ''),
  \ flexapi#field(0, 'clipboard', 'Clipboard'),
  \ flexapi#field(0, 'dragSource', 'DragSource'),
  \ flexapi#field(0, 'format', 'String'),
  \ flexapi#method(0, 'getClipboardData(', ')', 'Object'),
  \ flexapi#method(0, 'getDragSourceData(', ')', 'Object'),
  \ ])

call flexapi#namespace('mx.managers')
call flexapi#class('WindowedSystemChildrenList', '', ['IChildList'], [
  \ flexapi#method(0, 'WindowedSystemChildrenList(', 'owner:WindowedSystemManager, lowerBoundReference:QName, upperBoundReference:QName)', ''),
  \ flexapi#get(0, 'numChildren', 'int'),
  \ flexapi#method(0, 'addChild(', 'child:DisplayObject)', 'DisplayObject'),
  \ flexapi#method(0, 'addChildAt(', 'child:DisplayObject, index:int)', 'DisplayObject'),
  \ flexapi#method(0, 'removeChild(', 'child:DisplayObject)', 'DisplayObject'),
  \ flexapi#method(0, 'removeChildAt(', 'index:int)', 'DisplayObject'),
  \ flexapi#method(0, 'getChildAt(', 'index:int)', 'DisplayObject'),
  \ flexapi#method(0, 'getChildByName(', 'name:String)', 'DisplayObject'),
  \ flexapi#method(0, 'getChildIndex(', 'child:DisplayObject)', 'int'),
  \ flexapi#method(0, 'setChildIndex(', 'child:DisplayObject, newIndex:int)', 'void'),
  \ flexapi#method(0, 'getObjectsUnderPoint(', 'point:Point)', 'Array'),
  \ flexapi#method(0, 'contains(', 'child:DisplayObject)', 'Boolean'),
  \ ])
call flexapi#namespace('mx.managers')
call flexapi#class('WindowedSystemManager', 'MovieClip', ['ISystemManager'], [
  \ flexapi#method(0, 'WindowedSystemManager(', 'rootObj:IUIComponent)', ''),
  \ flexapi#get(0, 'allowDomainsInNewRSLs', 'Boolean'),
  \ flexapi#set(0, 'allowDomainsInNewRSLs', 'Boolean'),
  \ flexapi#get(0, 'allowInsecureDomainsInNewRSLs', 'Boolean'),
  \ flexapi#set(0, 'allowInsecureDomainsInNewRSLs', 'Boolean'),
  \ flexapi#get(0, 'cursorChildren', 'IChildList'),
  \ flexapi#get(0, 'document', 'Object'),
  \ flexapi#set(0, 'document', 'Object'),
  \ flexapi#get(0, 'embeddedFontList', 'Object'),
  \ flexapi#get(0, 'focusPane', 'Sprite'),
  \ flexapi#set(0, 'focusPane', 'Sprite'),
  \ flexapi#get(0, 'isProxy', 'Boolean'),
  \ flexapi#get(0, 'numModalWindows', 'int'),
  \ flexapi#set(0, 'numModalWindows', 'int'),
  \ flexapi#method(0, 'preloadedRSLs(', ')', 'Dictionary'),
  \ flexapi#get(0, 'popUpChildren', 'IChildList'),
  \ flexapi#get(0, 'rawChildren', 'IChildList'),
  \ flexapi#get(0, 'screen', 'Rectangle'),
  \ flexapi#get(0, 'toolTipChildren', 'IChildList'),
  \ flexapi#get(0, 'topLevelSystemManager', 'ISystemManager'),
  \ flexapi#get(0, 'width', 'Number'),
  \ flexapi#get(0, 'height', 'Number'),
  \ flexapi#get(0, 'childAllowsParent', 'Boolean'),
  \ flexapi#get(0, 'parentAllowsChild', 'Boolean'),
  \ flexapi#method(0, 'callInContext(', 'fn:Function, thisArg:Object, argArray:Array, returns:Boolean = true)', '*'),
  \ flexapi#method(0, 'create(', '... params)', 'Object'),
  \ flexapi#method(0, 'info(', ')', 'Object'),
  \ flexapi#method(0, 'isTopLevelRoot(', ')', 'Boolean'),
  \ flexapi#method(0, 'getTopLevelRoot(', ')', 'DisplayObject'),
  \ flexapi#method(0, 'getSandboxRoot(', ')', 'DisplayObject'),
  \ flexapi#method(0, 'registerImplementation(', 'interfaceName:String, impl:Object)', 'void'),
  \ flexapi#method(0, 'getImplementation(', 'interfaceName:String)', 'Object'),
  \ flexapi#method(0, 'getVisibleApplicationRect(', 'bounds:Rectangle = null, skipToSandboxRoot:Boolean = false)', 'Rectangle'),
  \ flexapi#method(0, 'deployMouseShields(', 'deploy:Boolean)', 'void'),
  \ flexapi#method(0, 'addPreloadedRSL(', 'loaderInfo:LoaderInfo, rsl:Vector.<RSLData>)', 'void'),
  \ flexapi#method(0, 'allowDomain(', '... domains)', 'void'),
  \ flexapi#method(0, 'allowInsecureDomain(', '... domains)', 'void'),
  \ flexapi#method(0, 'isTopLevelWindow(', 'object:DisplayObject)', 'Boolean'),
  \ flexapi#method(0, 'getDefinitionByName(', 'name:String)', 'Object'),
  \ flexapi#method(0, 'isTopLevel(', ')', 'Boolean'),
  \ flexapi#method(0, 'isFontFaceEmbedded(', 'textFormat:TextFormat)', 'Boolean'),
  \ flexapi#method(0, 'addEventListener(', 'type:String, listener:Function, useCapture:Boolean = false, priority:int = 0, useWeakReference:Boolean = false)', 'void'),
  \ flexapi#method(0, 'removeEventListener(', 'type:String, listener:Function, useCapture:Boolean = false)', 'void'),
  \ flexapi#method(0, 'addChild(', 'child:DisplayObject)', 'DisplayObject'),
  \ flexapi#get(0, 'numChildren', 'int'),
  \ flexapi#method(0, 'addChildAt(', 'child:DisplayObject, index:int)', 'DisplayObject'),
  \ flexapi#method(0, 'removeChild(', 'child:DisplayObject)', 'DisplayObject'),
  \ flexapi#method(0, 'removeChildAt(', 'index:int)', 'DisplayObject'),
  \ flexapi#method(0, 'getChildAt(', 'index:int)', 'DisplayObject'),
  \ flexapi#method(0, 'getChildByName(', 'name:String)', 'DisplayObject'),
  \ flexapi#method(0, 'getChildIndex(', 'child:DisplayObject)', 'int'),
  \ flexapi#method(0, 'setChildIndex(', 'child:DisplayObject, newIndex:int)', 'void'),
  \ flexapi#method(0, 'getObjectsUnderPoint(', 'point:Point)', 'Array'),
  \ flexapi#get(0, 'mouseX', 'Number'),
  \ flexapi#get(0, 'mouseY', 'Number'),
  \ flexapi#method(0, 'getFocus(', ')', 'InteractiveObject'),
  \ flexapi#method(0, 'invalidateParentSizeAndDisplayList(', ')', 'void'),
  \ ])

call flexapi#namespace('mx.managers')
call flexapi#class('WindowedSystemRawChildrenList', '', ['IChildList'], [
  \ flexapi#method(0, 'WindowedSystemRawChildrenList(', 'owner:WindowedSystemManager)', ''),
  \ flexapi#get(0, 'numChildren', 'int'),
  \ flexapi#method(0, 'getChildAt(', 'index:int)', 'DisplayObject'),
  \ flexapi#method(0, 'addChild(', 'child:DisplayObject)', 'DisplayObject'),
  \ flexapi#method(0, 'addChildAt(', 'child:DisplayObject, index:int)', 'DisplayObject'),
  \ flexapi#method(0, 'removeChild(', 'child:DisplayObject)', 'DisplayObject'),
  \ flexapi#method(0, 'removeChildAt(', 'index:int)', 'DisplayObject'),
  \ flexapi#method(0, 'getChildByName(', 'name:String)', 'DisplayObject'),
  \ flexapi#method(0, 'getChildIndex(', 'child:DisplayObject)', 'int'),
  \ flexapi#method(0, 'setChildIndex(', 'child:DisplayObject, newIndex:int)', 'void'),
  \ flexapi#method(0, 'getObjectsUnderPoint(', 'point:Point)', 'Array'),
  \ flexapi#method(0, 'contains(', 'child:DisplayObject)', 'Boolean'),
  \ ])
call flexapi#namespace('mx.skins.halo')
call flexapi#class('ApplicationTitleBarBackgroundSkin', 'ProgrammaticSkin', [], [
  \ flexapi#method(0, 'ApplicationTitleBarBackgroundSkin(', ')', ''),
  \ ])

call flexapi#namespace('mx.skins.halo')
call flexapi#class('StatusBarBackgroundSkin', 'ProgrammaticSkin', [], [
  \ flexapi#method(0, 'StatusBarBackgroundSkin(', ')', ''),
  \ ])

call flexapi#namespace('mx.skins.halo')
call flexapi#class('WindowCloseButtonSkin', 'UIComponent', [], [
  \ flexapi#method(0, 'WindowCloseButtonSkin(', ')', ''),
  \ flexapi#get(0, 'measuredHeight', 'Number'),
  \ flexapi#get(0, 'measuredWidth', 'Number'),
  \ ])

call flexapi#namespace('mx.skins.halo')
call flexapi#class('WindowMaximizeButtonSkin', 'UIComponent', [], [
  \ flexapi#method(0, 'WindowMaximizeButtonSkin(', ')', ''),
  \ flexapi#get(0, 'measuredHeight', 'Number'),
  \ flexapi#get(0, 'measuredWidth', 'Number'),
  \ ])

call flexapi#namespace('mx.skins.halo')
call flexapi#class('WindowMinimizeButtonSkin', 'UIComponent', [], [
  \ flexapi#method(0, 'WindowMinimizeButtonSkin(', ')', ''),
  \ flexapi#get(0, 'measuredHeight', 'Number'),
  \ flexapi#get(0, 'measuredWidth', 'Number'),
  \ ])

call flexapi#namespace('mx.skins.halo')
call flexapi#class('WindowRestoreButtonSkin', 'UIComponent', [], [
  \ flexapi#method(0, 'WindowRestoreButtonSkin(', ')', ''),
  \ flexapi#get(0, 'measuredHeight', 'Number'),
  \ flexapi#get(0, 'measuredWidth', 'Number'),
  \ ])

call flexapi#namespace('mx.utils')
call flexapi#class('DirectoryEnumeration', '', [], [
  \ flexapi#method(0, 'DirectoryEnumeration(', 'source:Array = null)', ''),
  \ flexapi#get(0, 'collection', 'ArrayCollection'),
  \ flexapi#get(0, 'enumerationMode', 'String'),
  \ flexapi#set(0, 'enumerationMode', 'String'),
  \ flexapi#get(0, 'filterFunction', 'Function'),
  \ flexapi#set(0, 'filterFunction', 'Function'),
  \ flexapi#get(0, 'nameCompareFunction', 'Function'),
  \ flexapi#set(0, 'nameCompareFunction', 'Function'),
  \ flexapi#get(0, 'showHidden', 'Boolean'),
  \ flexapi#set(0, 'showHidden', 'Boolean'),
  \ flexapi#method(0, 'refresh(', ')', 'void'),
  \ flexapi#method(0, 'fileFilterFunction(', 'file:File)', 'Boolean'),
  \ flexapi#method(0, 'fileCompareFunction(', 'file1:File, file2:File, fields:Array = null)', 'int'),
  \ ])

call flexapi#namespace('mx.utils')
call flexapi#class('DirectoryEnumerationMode', '', [], [
  \ flexapi#const(1, 'FILES_ONLY', 'String'),
  \ flexapi#const(1, 'DIRECTORIES_ONLY', 'String'),
  \ flexapi#const(1, 'FILES_FIRST', 'String'),
  \ flexapi#const(1, 'DIRECTORIES_FIRST', 'String'),
  \ flexapi#const(1, 'FILES_AND_DIRECTORIES', 'String'),
  \ ])

